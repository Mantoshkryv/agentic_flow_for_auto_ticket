# Generated by Django 5.2.5 on 2025-09-07 11:27

import django.db.models.deletion
import django_mongodb_backend.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advancetags',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=200)),
                ('asset_name', models.CharField(blank=True, max_length=300, null=True)),
                ('content_category', models.CharField(blank=True, max_length=200, null=True)),
                ('browser_name', models.CharField(blank=True, max_length=100, null=True)),
                ('browser_version', models.CharField(blank=True, max_length=100, null=True)),
                ('device_hardware_type', models.CharField(blank=True, max_length=100, null=True)),
                ('device_manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('device_marketing_name', models.CharField(blank=True, max_length=200, null=True)),
                ('device_model', models.CharField(blank=True, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, max_length=200, null=True)),
                ('device_os', models.CharField(blank=True, max_length=100, null=True)),
                ('device_os_family', models.CharField(blank=True, max_length=100, null=True)),
                ('device_os_version', models.CharField(blank=True, max_length=100, null=True)),
                ('app_name', models.CharField(blank=True, max_length=100, null=True)),
                ('app_version', models.CharField(blank=True, max_length=100, null=True)),
                ('player_framework_name', models.CharField(blank=True, max_length=100, null=True)),
                ('player_framework_version', models.CharField(blank=True, max_length=100, null=True)),
                ('last_cdn', models.CharField(blank=True, max_length=200, null=True)),
                ('cdn', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('channel', models.CharField(blank=True, max_length=200, null=True)),
                ('stream_url', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('ipv6', models.GenericIPAddressField(blank=True, null=True)),
                ('asnname', models.CharField(blank=True, max_length=200, null=True)),
                ('isp_name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'advancetags',
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('plays', models.IntegerField(default=0)),
                ('playing_time_mins', models.FloatField(blank=True, null=True)),
                ('streaming_performance_index', models.FloatField(blank=True, null=True)),
                ('video_start_failures_technical', models.IntegerField(default=0)),
                ('video_start_failures_business', models.IntegerField(default=0)),
                ('exit_before_video_starts', models.IntegerField(default=0)),
                ('video_playback_failures_technical', models.IntegerField(default=0)),
                ('video_playback_failures_business', models.IntegerField(default=0)),
                ('video_start_time_sec', models.FloatField(blank=True, null=True)),
                ('rebuffering_ratio_pct', models.FloatField(blank=True, null=True)),
                ('connection_induced_rebuffering_pct', models.FloatField(blank=True, null=True)),
                ('video_restart_time_sec', models.FloatField(blank=True, null=True)),
                ('avg_peak_bitrate_mbps', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'kpi_data',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=200, unique=True)),
                ('session_end_time', models.DateTimeField(blank=True, null=True)),
                ('playing_time', models.FloatField(blank=True, null=True)),
                ('asset_name', models.CharField(blank=True, db_index=True, max_length=300, null=True)),
                ('ended_session', models.BooleanField(default=False)),
                ('impacted_session', models.BooleanField(default=False)),
                ('exit_before_video_starts', models.BooleanField(default=False)),
                ('video_start_time', models.DateTimeField(blank=True, null=True)),
                ('rebuffering_ratio', models.FloatField(blank=True, null=True)),
                ('connection_induced_rebuffering_ratio', models.FloatField(blank=True, null=True)),
                ('total_video_restart_time', models.FloatField(blank=True, null=True)),
                ('avg_peak_bitrate', models.FloatField(blank=True, null=True)),
                ('avg_average_bitrate', models.FloatField(blank=True, null=True)),
                ('average_framerate', models.FloatField(blank=True, null=True)),
                ('starting_bitrate', models.FloatField(blank=True, null=True)),
                ('bitrate_switches', models.IntegerField(blank=True, null=True)),
                ('channel', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('ended_status', models.CharField(blank=True, max_length=200, null=True)),
                ('session_start_time', models.DateTimeField(db_index=True)),
                ('status', models.CharField(db_index=True, max_length=50)),
                ('video_start_failure', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sessions',
                'ordering': ['-session_start_time'],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('viewer_id', models.CharField(blank=True, max_length=200, null=True)),
                ('channel', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('asset_name', models.CharField(blank=True, max_length=300, null=True)),
                ('failure_code', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('root_cause', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('confidence', models.CharField(blank=True, max_length=50, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('failure_time', models.DateTimeField(blank=True, null=True)),
                ('evidence', models.TextField(blank=True, null=True)),
                ('deep_link', models.URLField(blank=True, null=True)),
                ('assign_team', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('ticket_text', models.TextField(blank=True, null=True)),
                ('status', models.CharField(db_index=True, default='new', max_length=50)),
                ('priority', models.CharField(db_index=True, default='medium', max_length=20)),
                ('processed', models.BooleanField(db_index=True, default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.CharField(blank=True, max_length=100, null=True)),
                ('resolved_by', models.CharField(blank=True, max_length=100, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tg.session')),
            ],
            options={
                'db_table': 'tickets',
                'ordering': ['-created_at'],
            },
        ),
    ]
